```r
setwd("C:/Users/irvin/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
```
data <- read.csv("activity.csv")
data
```r
hist(tapply(data$steps, data$date, sum), xlab = "Total Daily Steps", breaks = 20,
main = "Total Steps Taken Per Day")
total_steps_daily <- as.numeric(tapply(data$steps, data$date, sum))
```
```r
mean_steps <- mean(total_steps_daily, na.rm = TRUE)
```
```
# [1] 10766
```
```r
median_steps <- median(total_steps_daily, na.rm = TRUE)
```
```
# [1] 10765
```
mean_steps <- mean(total_steps_daily, na.rm = TRUE)
mean_steps
median_steps <- median(total_steps_daily, na.rm = TRUE)
data$interval <- as.factor(as.character(data$interval))
mean_interval <- as.numeric(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervals <- data.frame(intervals = as.numeric(levels(data$interval)), mean_interval)
intervals <- intervals[order(intervals$intervals), ]
labels <- c("00:00", "05:00", "10:00", "15:00", "20:00")
labels_at <- seq(0, 2000, 500)
plot(intervals$intervals, intervals$mean_interval, type = "l", main = "Average Steps During 5-minute Intervals",
ylab = "Average Steps", xlab = "Hour", xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
sort_intervals <- intervals[order(intervals$mean_interval, decreasing = TRUE), ]
head(sort_intervals)
max_interval <- sort_intervals$intervals[1[1]]
max_interval
dim(data[is.na(data$steps), ])[1]
steps <- vector()
for (i in 1:dim(data)[1]) {
if (is.na(data$steps[i])) {
steps <- c(steps, intervals$mean_interval[intervals$intervals == data$interval[i]])
} else {
steps <- c(steps, data$steps[i])
}
}
no_na_data <- data.frame(steps = steps, date = data$date, interval = data$interval)
hist(tapply(no_na_data$steps, no_na_data$date, sum), xlab = "Total Daily Steps", breaks = 20, main = "Total Steps Taken Per Day")
total_steps_daily <- as.numeric(tapply(no_na_data$steps,
no_na_data$date, sum))
mean_steps <- mean(total_steps_daily)
median_steps <- median(total_steps_daily)
mean_steps
no_na_data$daytype <- c("weekend", "weekday", "weekday",
"weekday", "weekday", "weekday", "weekend")[as.POSIXlt(no_na_data$date)$wday +
1]
no_na_data$daytype <- as.factor(no_na_data$daytype)
weekday <- no_na_data[no_na_data$daytype ==
"weekday", ]
weekend <- no_na_data[no_na_data$daytype ==
"weekend", ]
weekday_means <- as.numeric(tapply(weekday$steps, weekday$interval, mean))
weekend_means <- as.numeric(tapply(weekend$steps, weekend$interval, mean))
intervals_daytype <- data.frame(intervals = as.numeric(levels(data$interval)),
weekday_means, weekend_means)
intervals_daytype <- intervals_daytype[order(intervals_daytype$intervals),
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "1",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
no_na_data$daytype <- c("weekend", "weekday", "weekday",
"weekday", "weekday", "weekday", "weekend")[as.POSIXlt(no_na_data$date)$wday +
1]
no_na_data$daytype <- as.factor(no_na_data$daytype)
weekday <- no_na_data[no_na_data$daytype ==
"weekday", ]
weekend <- no_na_data[no_na_data$daytype ==
"weekend", ]
weekday_means <- as.numeric(tapply(weekday$steps, weekday$interval, mean))
weekend_means <- as.numeric(tapply(weekend$steps, weekend$interval, mean))
intervals_daytype <- data.frame(intervals = as.numeric(levels(data$interval)),
weekday_means, weekend_means)
intervals_daytype <- intervals_daytype[order(intervals_daytype$intervals),
]
```
```r
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "1",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
no_na_data$daytype <- c("weekend", "weekday", "weekday",
"weekday", "weekday", "weekday", "weekend")[as.POSIXlt(no_na_data$date)$wday +
1]
no_na_data$daytype <- as.factor(no_na_data$daytype)
weekday <- no_na_data[no_na_data$daytype ==
"weekday", ]
weekend <- no_na_data[no_na_data$daytype ==
"weekend", ]
weekday_means <- as.numeric(tapply(weekday$steps, weekday$interval, mean))
weekend_means <- as.numeric(tapply(weekend$steps, weekend$interval, mean))
intervals_daytype <- data.frame(intervals = as.numeric(levels(data$interval)),
weekday_means, weekend_means)
intervals_daytype <- intervals_daytype[order(intervals_daytype$intervals),
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
intervals_daytype$intervals
intervals_daytype$weekday_means
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "2",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
install.packages("knitr")
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "1",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "1",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
```
?plot
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
no_na_data$daytype <- c("weekend", "weekday", "weekday",
"weekday", "weekday", "weekday", "weekend")[as.POSIXlt(no_na_data$date)$wday +
1]
no_na_data$daytype <- as.factor(no_na_data$daytype)
weekday <- no_na_data[no_na_data$daytype ==
"weekday", ]
weekend <- no_na_data[no_na_data$daytype ==
"weekend", ]
weekday_means <- as.numeric(tapply(weekday$steps, weekday$interval, mean))
weekend_means <- as.numeric(tapply(weekend$steps, weekend$interval, mean))
intervals_daytype <- data.frame(intervals = as.numeric(levels(data$interval)),
weekday_means, weekend_means)
intervals_daytype <- intervals_daytype[order(intervals_daytype$intervals),
]
```
```r
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
```
png('plot4.png', width=480, height=480)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
```r
png('plot5.png', width=480, height=480)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
```
png('plot5.png', width=480, height=480)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
dev.off()
```
png('plot4.png', width=480, height=480)
par <- par(mfrow = c(2, 1))
plot(intervals_daytype$intervals, intervals_daytype$weekday_means, type = "l",
col = "red", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekdays",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
plot(intervals_daytype$intervals, intervals_daytype$weekend_means, type = "l",
col = "blue", ylab = "Average Steps", xlab = "Hour", main = "Average Steps During 5-minute Intervals on Weekends",
xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
dev.off()
```
hist(tapply(data$steps, data$date, sum), xlab = "Total Daily Steps", breaks = 20,
main = "Total Steps Taken Per Day")
total_steps_daily <- as.numeric(tapply(data$steps, data$date, sum))
```r
data$interval <- as.factor(as.character(data$interval))
mean_interval <- as.numeric(tapply(data$steps, data$interval, mean, na.rm = TRUE))
intervals <- data.frame(intervals = as.numeric(levels(data$interval)), mean_interval)
intervals <- intervals[order(intervals$intervals), ]
labels <- c("00:00", "05:00", "10:00", "15:00", "20:00")
labels_at <- seq(0, 2000, 500)
plot(intervals$intervals, intervals$mean_interval, type = "l", main = "Average Steps During 5-minute Intervals",
ylab = "Average Steps", xlab = "Hour", xaxt = "n")
axis(side = 1, at = labels_at, labels = labels)
```
```r
sort_intervals <- intervals[order(intervals$mean_interval, decreasing = TRUE), ]
head(sort_intervals)
```
```
sort_intervals <- intervals[order(intervals$mean_interval, decreasing = TRUE), ]
head(sort_intervals)
```r
sort_intervals <- intervals[order(intervals$mean_interval, decreasing = TRUE), ]
head(sort_intervals)
max_interval <- sort_intervals$intervals[1[1]]
max_interval
